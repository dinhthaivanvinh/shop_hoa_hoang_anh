// src/pages/CartPage.jsx
import React from 'react';
import { useNavigate } from 'react-router-dom';
import '../style/CartPage.css';

const CartPage = ({ cartItems, updateQuantity, removeFromCart, clearCart }) => {
  const navigate = useNavigate();

  // Calculate totals
  const subtotal = cartItems.reduce((sum, item) => sum + item.price * item.quantity, 0);
  const shipping = cartItems.length > 0 ? 30000 : 0; // 30k ph√≠ ship
  const total = subtotal + shipping;

  const handleOrder = () => {
    if (cartItems.length === 0) return;
    navigate('/order');
  };

  const handleContinueShopping = () => {
    navigate('/');
  };

  const formatPrice = (price) => {
    return new Intl.NumberFormat('vi-VN', {
      style: 'currency',
      currency: 'VND'
    }).format(price);
  };

  return (
    <div className="cart-page">
      <div className="cart-container">
        {/* Page Header */}
        <div className="cart-page-header">
          <h1 className="cart-title">
            <span className="cart-icon">üõí</span>
            Gi·ªè H√†ng C·ªßa B·∫°n
          </h1>
          <p className="cart-subtitle">
            {cartItems.length > 0
              ? `B·∫°n c√≥ ${cartItems.length} s·∫£n ph·∫©m trong gi·ªè h√†ng`
              : 'Gi·ªè h√†ng ƒëang tr·ªëng'}
          </p>
        </div>

        {cartItems.length === 0 ? (
          /* Empty Cart */
          <div className="empty-cart">
            <div className="empty-cart-icon">üå∏</div>
            <h3>Gi·ªè h√†ng c·ªßa b·∫°n ƒëang tr·ªëng</h3>
            <p>H√£y kh√°m ph√° c√°c s·∫£n ph·∫©m tuy·ªát v·ªùi c·ªßa ch√∫ng t√¥i!</p>
            <button className="continue-shopping-btn" onClick={handleContinueShopping}>
              <span className="btn-icon">üå∫</span>
              Ti·∫øp t·ª•c mua s·∫Øm
            </button>
          </div>
        ) : (
            <div className="cart-content">
              {/* Cart Items Section */}
              <div className="cart-items-section">
                <div className="cart-items-header">
                  <h3>S·∫£n ph·∫©m ({cartItems.length})</h3>
                </div>

                <div className="cart-items-list">
                  {cartItems.map(item => (
                  <CartItem
                    key={item.id}
                    item={item}
                    updateQuantity={updateQuantity}
                    removeFromCart={removeFromCart}
                    formatPrice={formatPrice}
                  />
                ))}
                </div>

                {/* Clear Cart Button */}
                <div className="cart-actions">
                  <button className="clear-cart-btn" onClick={clearCart}>
                    <span className="btn-icon">üóëÔ∏è</span>
                    X√≥a t·∫•t c·∫£
                  </button>
                  <button className="continue-shopping-link" onClick={handleContinueShopping}>
                    ‚Üê Ti·∫øp t·ª•c mua s·∫Øm
                  </button>
                </div>
              </div>

              {/* Order Summary Section */}
              <div className="cart-summary-section">
                <div className="cart-summary">
                  <h3 className="summary-title">T√≥m T·∫Øt ƒê∆°n H√†ng</h3>

                  <div className="summary-row">
                    <span>T·∫°m t√≠nh:</span>
                    <span>{formatPrice(subtotal)}</span>
                  </div>

                  <div className="summary-row">
                    <span>Ph√≠ v·∫≠n chuy·ªÉn:</span>
                    <span>{formatPrice(shipping)}</span>
                  </div>

                  <div className="summary-divider"></div>

                  <div className="summary-row summary-total">
                    <span>T·ªïng c·ªông:</span>
                    <span className="total-price">{formatPrice(total)}</span>
                  </div>

                  <button className="checkout-btn" onClick={handleOrder}>
                    <span className="btn-icon">‚úì</span>
                    ƒê·∫∑t H√†ng Ngay
                  </button>

                  <div className="cart-features">
                    <div className="feature-item">
                      <span className="feature-icon">‚úÖ</span>
                      <span>Mi·ªÖn ph√≠ ƒë·ªïi tr·∫£ trong 7 ng√†y</span>
                    </div>
                    <div className="feature-item">
                      <span className="feature-icon">üöö</span>
                      <span>Giao h√†ng nhanh 2-4 gi·ªù</span>
                    </div>
                    <div className="feature-item">
                      <span className="feature-icon">üíØ</span>
                      <span>Cam k·∫øt hoa t∆∞∆°i 100%</span>
                    </div>
                  </div>
                </div>
              </div>
            </div>
        )}
      </div>
    </div>
  );
};

// Cart Item Component
const CartItem = ({ item, updateQuantity, removeFromCart, formatPrice }) => {
  const handleQuantityChange = (e) => {
    const val = Number(e.target.value);
    if (val >= 1 && val <= 99) {
      updateQuantity(item.id, val);
    }
  };

  const incrementQuantity = () => {
    if (item.quantity < 99) {
      updateQuantity(item.id, item.quantity + 1);
    }
  };

  const decrementQuantity = () => {
    if (item.quantity > 1) {
      updateQuantity(item.id, item.quantity - 1);
    }
  };

  return (
    <div className="cart-item">
      <div className="cart-item-image">
        <img src={item.image} alt={item.name} />
      </div>

      <div className="cart-item-details">
        <h4 className="cart-item-name">{item.name}</h4>
        <p className="cart-item-price">{formatPrice(item.price)}</p>

        {/* Mobile Price Total */}
        <div className="cart-item-mobile-total">
          <span className="mobile-label">Th√†nh ti·ªÅn:</span>
          <span className="mobile-price">{formatPrice(item.price * item.quantity)}</span>
        </div>
      </div>

      <div className="cart-item-quantity">
        <button
          className="quantity-btn quantity-decrease"
          onClick={decrementQuantity}
          disabled={item.quantity <= 1}
          aria-label="Gi·∫£m s·ªë l∆∞·ª£ng"
        >
          ‚àí
        </button>
        <input
          type="number"
          className="quantity-input"
          value={item.quantity}
          onChange={handleQuantityChange}
          min="1"
          max="99"
          aria-label="S·ªë l∆∞·ª£ng"
        />
        <button 
          className="quantity-btn quantity-increase"
          onClick={incrementQuantity}
          disabled={item.quantity >= 99}
          aria-label="TƒÉng s·ªë l∆∞·ª£ng"
        >
          +
        </button>
      </div>

      <div className="cart-item-total">
        {formatPrice(item.price * item.quantity)}
      </div>

      <button
        className="cart-item-remove"
        onClick={() => removeFromCart(item.id)}
        aria-label={`X√≥a ${item.name}`}
      >
        <span className="remove-icon">√ó</span>
      </button>
    </div>
  );
};

export default CartPage;